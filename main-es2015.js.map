{"version":3,"sources":["./src/app/services/error-interceptor.ts","./src/app/services/login.guard.ts","./src/environments/environment.ts","./src/app/services/login.service.ts","./src/app/services/common.service.ts","./src/app/app.component.ts","./src/app/services/pages.guard.ts","./src/app/app.module.ts","./src/app/constants/constants.ts","./src/app/services/chat.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { LoginService } from './login.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS, HttpEvent, HttpErrorResponse, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap, take } from 'rxjs/operators';\r\nimport { SignalRService } from './chat.service';\r\nimport { CommonService } from './common.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'x-access-token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private loginService: LoginService, private signalRService: SignalRService, private CommonService: CommonService) { }\r\n\r\n  private isRefreshing = false;\r\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let token = this.CommonService.getData('accessToken') || 'undefined';\r\n\r\n    if (token !== 'undefined') {\r\n      request = this.addToken(request, token);\r\n    }\r\n\r\n    return next.handle(request)\r\n      .pipe(\r\n        catchError(error => {\r\n          if (error instanceof HttpErrorResponse && error.status === 401) {\r\n            return this.handle401Error(request, next);\r\n          } else {\r\n            return throwError(error);\r\n          }\r\n        }\r\n        )\r\n      );\r\n  }\r\n\r\n  private addToken(request: HttpRequest<any>, token: string) {\r\n    return request.clone({\r\n      setHeaders: {\r\n        'Authorization': `Bearer ${token}`\r\n      }\r\n    });\r\n\r\n    // request = request.clone({\r\n    //   setHeaders: { Authorization: `Bearer ${token}` }\r\n    // });\r\n  }\r\n\r\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      this.refreshTokenSubject.next(null);\r\n      let obj = {\r\n        userID: this.CommonService.getData('userID'),\r\n        refreshToken: this.CommonService.getData('refreshToken')\r\n      }\r\n      console.log(\"Refresh Token Request\", obj);\r\n\r\n      return this.loginService.refreshToken(obj).pipe(\r\n        switchMap((token: any) => {\r\n          console.log(\"Refresh Token Response\", token);\r\n\r\n          this.isRefreshing = false;\r\n          if (token.result === 'Success') {\r\n            this.CommonService.setData('accessToken', token.accessToken)\r\n            this.refreshTokenSubject.next(token.accessToken);\r\n            // return next.handle(this.addToken(request, token.accessToken));\r\n          }\r\n          else {\r\n            console.log(\"Else\")\r\n            this.signalRService.removeFromGroup()\r\n            this.CommonService.clearStorage()\r\n            this.router.navigate(['/']);\r\n            //this.loginService.redirect();\r\n            //return throwError(token.message);\r\n          }\r\n          return next.handle(this.addToken(request, token.accessToken));\r\n        }),\r\n        catchError((err) => {\r\n          console.log(\"catch Error\")\r\n          this.CommonService.clearStorage()\r\n          this.router.navigate(['/']);\r\n          this.isRefreshing = false;\r\n          this.signalRService.removeFromGroup()\r\n          this.loginService.redirect();\r\n          return throwError(err);\r\n        })\r\n\r\n\r\n      );\r\n    }\r\n\r\n    return this.refreshTokenSubject.pipe(\r\n      filter(token => token != null),\r\n      take(1),\r\n      switchMap(token => {\r\n        console.log(\"Refresh Token 1\", token);\r\n        return next.handle(this.addToken(request, token));\r\n      }));\r\n  }\r\n\r\n  private logOut() {\r\n\r\n    var obj = {\r\n      customerID: this.CommonService.getData('customerID'),\r\n      userID: this.CommonService.getData('userID'),\r\n    }\r\n    this.loginService.logout(obj).subscribe((res) => {\r\n      this.signalRService.removeFromGroup()\r\n      this.loginService.redirect();\r\n    }, (err) => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from './common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuard implements CanActivate {\r\n  constructor(private CommonService: CommonService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.CommonService.isAuthenticated()) {\r\n      this.router.navigate(['/pages'])\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API_URL: 'https://nmbservice.spitfireagent.com/DialServiceAPI',\r\n  //API_URL: 'http://localhost:62188',\r\n  CAMPAIGN_STATS_INTERVAL: 10000\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { API_URL } from '../constants/constants';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { EMPTY, of } from \"rxjs\";\r\nimport { CommonService } from './common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class LoginService {\r\n\r\n  constructor(private http: HttpClient, private router: Router, private CommonService: CommonService) { }\r\n\r\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n  login(user: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Login/LoginUser', user, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  refreshToken(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Login/RefreshToken', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  registerClient(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/DialService/RegisterClient', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  registerSupervisor(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/DialService/RegisterSupervisor', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  getSecretQuestion(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Login/GetSecretQuestion', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  verifySecretAnswer(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Login/verifySecretAnswer', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  logout(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Login/LogoutUser', data, { headers: this.headers }).pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  redirect() {\r\n    this.CommonService.clearStorage();\r\n    this.router.navigate(['/']);\r\n  }\r\n  \r\n  gotoNotFound() {\r\n    this.router.navigate(['/403']);\r\n  }\r\n\r\n  handleError(error: any) {\r\n    return throwError(error.message || error);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  constructor() { }\r\n\r\n  setData(key: any, val: any): void {\r\n    sessionStorage[key] = val;\r\n  }\r\n\r\n  getData(key: any): any {\r\n    return sessionStorage[key];\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return sessionStorage.userID != null;\r\n  }\r\n\r\n  clearStorage(){\r\n    sessionStorage.clear();\r\n  }\r\n\r\n}","import { Component } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`,\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'SpitFire';\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\nimport { CommonService } from './common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PagesGuard implements CanActivate {\r\n  constructor(private loginService: LoginService, private CommonService: CommonService) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (!this.CommonService.isAuthenticated()) {\r\n \r\n      this.loginService.redirect();\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ErrorInterceptor } from './services/error-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { environment } from './../../environments/environment';\r\n\r\nexport const API_URL: string = environment.API_URL;\r\nexport const CAMPAIGN_STATS_INTERVAL: number = environment.CAMPAIGN_STATS_INTERVAL;\r\n\r\nexport interface Country {\r\n    id: number;\r\n    name: string;\r\n    flag: string;\r\n    area: number;\r\n    population: number;\r\n}\r\n\r\nexport const COUNTRIES: Country[] = [\r\n    {\r\n        id: 1,\r\n        name: 'Russia',\r\n        flag: 'f/f3/Flag_of_Russia.svg',\r\n        area: 17075200,\r\n        population: 146989754\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'France',\r\n        flag: 'c/c3/Flag_of_France.svg',\r\n        area: 640679,\r\n        population: 64979548\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Germany',\r\n        flag: 'b/ba/Flag_of_Germany.svg',\r\n        area: 357114,\r\n        population: 82114224\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Portugal',\r\n        flag: '5/5c/Flag_of_Portugal.svg',\r\n        area: 92090,\r\n        population: 10329506\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Canada',\r\n        flag: 'c/cf/Flag_of_Canada.svg',\r\n        area: 9976140,\r\n        population: 36624199\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Vietnam',\r\n        flag: '2/21/Flag_of_Vietnam.svg',\r\n        area: 331212,\r\n        population: 95540800\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Brazil',\r\n        flag: '0/05/Flag_of_Brazil.svg',\r\n        area: 8515767,\r\n        population: 209288278\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Mexico',\r\n        flag: 'f/fc/Flag_of_Mexico.svg',\r\n        area: 1964375,\r\n        population: 129163276\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'United States',\r\n        flag: 'a/a4/Flag_of_the_United_States.svg',\r\n        area: 9629091,\r\n        population: 324459463\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'India',\r\n        flag: '4/41/Flag_of_India.svg',\r\n        area: 3287263,\r\n        population: 1324171354\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Indonesia',\r\n        flag: '9/9f/Flag_of_Indonesia.svg',\r\n        area: 1910931,\r\n        population: 263991379\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Tuvalu',\r\n        flag: '3/38/Flag_of_Tuvalu.svg',\r\n        area: 26,\r\n        population: 11097\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'China',\r\n        flag: 'f/fa/Flag_of_the_People%27s_Republic_of_China.svg',\r\n        area: 9596960,\r\n        population: 1409517397\r\n    }\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport * as signalR from \"@aspnet/signalr\"; // or from \"@microsoft/signalr\" if you are using a new library\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { API_URL } from '../constants/constants';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { CommonService } from './common.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class SignalRService {\r\n  \r\n  constructor(private http: HttpClient, private CommonService: CommonService) { }\r\n\r\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n  public data!: any[];\r\n  public connectionId: any;\r\n  public hubConnection!: signalR.HubConnection\r\n  public groupName: any;\r\n\r\n  \r\n\r\n  startConnection = () => {\r\n    this.groupName = JSON.parse(this.CommonService.getData('user')).userName;\r\n    //this.groupName = this.CommonService.getData('userID');\r\n    this.hubConnection = new signalR.HubConnectionBuilder()\r\n      .withUrl(API_URL + '/chatsocket', {\r\n        skipNegotiation: true,\r\n        transport: signalR.HttpTransportType.WebSockets\r\n      })\r\n      .build();\r\n    \r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log('Connection started'))\r\n      .then(() => this.getConnectionId())\r\n      .then(() => this.addToGroup(this.groupName))\r\n      .catch((err: string) => console.log( err, API_URL + '/chatsocket'))\r\n  }\r\n\r\n  addToGroup = (groupName: any) => {\r\n    this.hubConnection.invoke('AddToGroup', groupName).then(() => {\r\n      console.log(\"AddToGroup\", groupName)})\r\n      .catch((err: string) => console.log(\"AddToGroup Error\", err))\r\n  }\r\n\r\n  //Called Directly from the Page.ts\r\n/*   public receiveManagerMessageListener = () => {\r\n    this.hubConnection.on('ReceiveManagerMessage', (data: any[]) => {\r\n      this.data = data;\r\n      console.log(data);\r\n    });\r\n  } */\r\n\r\n  getConnectionId = () => {\r\n    this.hubConnection.invoke('getconnectionid').then(\r\n      (data) => {\r\n        console.log(\"ConnectionId\" , data);\r\n      })\r\n  }\r\n\r\n  removeFromGroup = () => {\r\n    if (this.hubConnection) {  \r\n      console.log(\"RemoveFromALLGroup\")\r\n       this.hubConnection.invoke('RemoveFromALLGroup', JSON.parse(this.CommonService.getData('user')).userName)\r\n        .catch((err: string) => console.log(\"RemoveAllFromGroup Error\", err))\r\n    }\r\n  }\r\n\r\n  getAllAgent(): Observable<any> {\r\n    return this.http.get<any>(API_URL + '/api/Agent/GetAllAgents', { headers: this.headers })\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAllManagers(): Observable<any> {\r\n    return this.http.get<any>(API_URL + '/api/Users/GetAllManagers', { headers: this.headers })\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  sendChatMessage(data: any): Observable<any> {\r\n    return this.http.post<any>(API_URL + '/api/Chat/SendChatMessage', data, { headers: this.headers })\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getImage(name: string): Observable<any> {\r\n    return this.http.get(API_URL + '/api/FileUpload/GetImage/' + name, { responseType: \"blob\" })\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  handleError(error: any) {\r\n    return throwError(error.message || error);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginGuard } from './services/login.guard';\r\nimport { PagesGuard } from './services/pages.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', canActivate: [LoginGuard], loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\r\n  { path: 'pages', canActivate: [PagesGuard], loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule) }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { onSameUrlNavigation: 'reload' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { CommonService } from 'src/app/services/common.service';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}