{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/logout/logout.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthComponent } from './auth.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: AuthComponent, children: [\n      { path: '', component: LoginComponent },\n      { path: 'logout', component: LogoutComponent },\n    ]\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  template: `<router-outlet></router-outlet>`,\n  styles: []\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { AuthComponent } from './auth.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LogoutComponent,\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCardModule,\n    HttpClientModule,\n    MatProgressBarModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './../../services/login.service'\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  isSubmit: boolean = false;\n  isError: boolean = false;\n  incorectPassword: boolean = false;\n\n  constructor(private router: Router, private loginService: LoginService) {\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      appType: new FormControl(4, [Validators.required])\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isSubmit = true\n      this.loginService.login(this.loginForm.value).subscribe((res) => {\n        this.isSubmit = false\n        if (res.loginResult.result === 'Success') {\n          this.loginService.setData(\"allowedRole\", res.loginResult.allowedRole)\n          this.loginService.setData(\"customerID\", res.loginResult.customerID)\n          this.loginService.setData(\"encryptedTicket\", res.loginResult.encryptedTicket)\n          this.loginService.setData(\"userID\", res.loginResult.userID)\n          this.router.navigateByUrl('/pages')\n        }\n        if (res.loginResult.result === 'Error') {\n          this.isError = true\n          setTimeout(() => {\n            this.isError = false\n          }, 2000);\n        }\n        if (res.loginResult.result === 'Failed') {\n          this.incorectPassword = true\n          this.loginForm.controls['password'].setErrors({ invalid: true });\n        }\n      }, (err) => {\n        console.log(err)\n      })\n    }\n  }\n\n\n}\n","<div class=\"page-wrapper\">\n    <mat-progress-bar *ngIf=\"isSubmit\" mode=\"indeterminate\"></mat-progress-bar>\n    <div class=\"login center\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n            <mat-card class=\"login-card\">\n                <div class=\"login-form\">\n                    <h2 class=\"center\"><img class=\"menu-icon\" src=\"assets/img/logo.png\" width=\"170\"></h2>\n                    <div style=\"height: 20px\">\n                        <mat-error class=\"center\" *ngIf=\"isError\">Incorrect Username and Password</mat-error>\n                    </div>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Email</mat-label>\n                        <input matInput formControlName=\"username\">\n                        <mat-error>\n                            <span *ngIf=\"loginForm.get('username')?.invalid && !loginForm.get('username')?.value\">Required</span>\n                            <span *ngIf=\"loginForm.get('username')?.invalid && loginForm.get('username')?.value\">Invalid</span>\n                        </mat-error>\n                    </mat-form-field>\n\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Password</mat-label>\n                        <input type=\"password\" matInput formControlName=\"password\">\n                        <mat-error>\n                            <span *ngIf=\"loginForm.get('password')?.invalid && !loginForm.get('password')?.value\">Required</span>\n                            <span *ngIf=\"loginForm.get('password')?.errors && incorectPassword && loginForm.get('password')?.value\">Incorrect Password!</span>\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"card-footer\">\n                    <button type=\"submit\" mat-raised-button color=\"warn\">Login</button>\n                </div>\n            </mat-card>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './../../services/login.service'\n\n@Component({\n  selector: 'app-logout',\n  template: ``,\n  styles: []\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private userService: LoginService) { }\n\n  ngOnInit() {\n    this.userService.logout();\n  }\n\n}\n"],"sourceRoot":"webpack:///"}